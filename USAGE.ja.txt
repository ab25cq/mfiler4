キー操作とその機能、キー操作の定義

カーソル上, CTRL-P           カーソルを上に移動する。
カーソル下, CTRL-N           カーソルを下に移動する。
カーソル右、CTRL-F           カーソルを右のウィンドウに移動する。
カーソル左、CTRL-B           カーソルを左のウィンドウに移動する。
CTRL-A                       カーソルを一番上に移動する。
CTRL-E                       カーソルを一番下に移動する。
PAGEUP, CTRL-U, meta + v     カーソルを上に１０移動する。
PAGEDORN, CTRL-D, CTRL-V     カーソルを下に１０移動する。
BACKSPACE, CHTRL-H, DELETE   親ディレクトリに移動する。
\                            ルートディレクトリに移動する。
~                            ホームディレクトリに移動する。
ENTER                        カーソルのファイルがディレクトリであればカーソルのディレクトリに移動する。ディレクトリでなければ、実行する。コマンドラインに移動するのでコマンドを入力してください。
tab                          1画面の時は2画面にする。(コピーなどのファイル操作をする場合tabで2画面にしてからファイル操作が終わったらqを押せばスマートに操作できます。)
q                            2画面の時は1画面にする。1画面の時は終了する。
CTRL-C                       終了する。
CTRL-L                       ディスクを再読み込みして、画面を再描写する。
SPACE                        カーソル下のファイルをマークして、下に移動する。
[                            範囲マークの始点をカーソル下のファイルに設定。
]                            範囲マークの終点をカーソル下のファイルに設定。範囲マークに入っているファイルをマークを反転する
HOME, meta + a               ディレクトリ以外を全てのファイルのマークを反転
END, meta + e                全てのファイルのマークを反転
*                            グロブマーク。*.cとすれば全ての拡張子cのファイルのマークを反転。
+                            正規表現マーク。正規表現にマッチするファイルのマークを反転。
.                            .から始まるファイルを表示する、表示しないを繰り返す。
c                            マークしているファイルをコピー。１画面時は目標ディレクトリを指定してからコピー。２画面時は２画面のアクティブでないほうのディレクトリを目標ディレクトリとする。
C                            cpプログラムを使ったコピー。&をつけるとバックグランドコピーになります。その場合は-iを外したほうがいいです。詳しくはman cpしてください。
m                            マークしているファイルを移動。１画面時は目標ディレクトリを指定してから移動。２画面時は２画面のアクティブでないほうのディレクトリを目標ディレクトリとする。
M                            mvプログラムを使ったファイルの移動。
d                            マークしているファイルを$TRASHBOX_DIRに移動する。初期値は~/.mfiler3/trashbox/
D                            マークしているファイルを削除。
l                            マークしたファイルのリンクを作成します。対象ディレクトリは２画面時は非アクティブなディレクトリに、１画面時はパスを指定してください。作成されるリンクはフルパスです。
e                            エディッタ(vim)でファイルを編集(キーバインドに表示を伴うようなコマンドをバインドする場合はexternalが必要)
v                            ページャ(less)でファイルを見る。（テキストファイルのみ)
r                            ファイル名を変える
                             マークしてからrを押すと正規表現改名。

                             例えば
                             
                             regex_rename '\.c$' '.h'
                             
                             を実行すると拡張子cを拡張子hに変換。
a                            ファイル属性を操作するメニューを呼ぶ
n                            ファイルを新しく作る。
k                            ディレクトリを新しく作る。mkdirは-pオプションがしてあるので、例えばdir1/dir2/dir3など深くディレクトリを指定してもdir1/dir2/dir3が作成されます。
b                            ファイルのバックアップを作成する
g                            mgrepを実行する。文字列を検索して、その結果のリストをENTERで選択すればその位置にvimが立ち上がります。mgrepに-Rをつければ再帰的に下のディレクトリも検索します。
G                            文字列を検索して、その文字列を含むファイルの仮想ディレクトリを作成します。grepに-Rをつければ再帰的に下のディレクトリも検索します。
f,/                          インクリメンタルサーチを開始。ファイル名を入力すればマッチするファイルに移動します。その後下キーを押せば次の候補を探します。上キーを押せば前の候補に移動します。スペースを押せば、ファイルをマークします。
F                            findコマンドにマッチするファイルの仮想ディレクトリを作成します。
                             findコマンドには以下のようなオプションがあります。

                             -name パターンにマッチするファイル名を持つファイルを検索します。これにはワイルドカードが使用できます。'*.c'とすろと拡張子cのファイル。

                             -size +n
                             -size -n
                             -size n

                             ファイルのサイズが+n(n以上) -n(n以下) n(nジャスト)のファイルを検索します。

                             詳しくはman findとしてください。
s                            ソートとマスクの設定をするメニューを表示します。
V                            表示オプションの設定をするメニューを表示します。
o                            アクティブ側のディレクトリのパスを非アクティブ側のパスに移動。
O                            非アクティブ側のディレクトリのパスをアクティブ側のパスに移動。
w                            アクティブ側のパスと非アクティブ側のパスを交換します。
j                            ディレクトリのジャンプメニューを表示します。
    
                             Add ...で現在のディレクトリをメニューに追加します。
                             Clear...でジャンプメニューを初期化。

                             メニューは終了時保存されます。

H                            ディレクトリヒストリメニュー
J                            コマンドラインによるディレクトリ移動
h                            コマンドラインに移動します。
x                            ファイルを実行します。
p                            マークファイルを圧縮する。(２画面時は非アクティブ側に保存される）
P                            マークファイルを圧縮する。(２画面、１画面時ともにアクティブ側に保存される）
u                            圧縮ファイルを解凍する。(２画面時は非アクティブ側に保存される）
U                            圧縮ファイルを解凍する。(２画面、１画面時ともに非アクティブ側に保存される）
CTRL-T                       新規ディレクトリを作成する。(現在のカレントディレクトリのパス）
CTRL-W                       ディレクトリを削除する。（現在のカレントディレクトリを削除）
meta + 1-9                   ディレクトリをアクティブにする。
meta + l                     ディレクトリを戻る
meta + r                     ディレクトリを進む
:                            bashシェルを起動する。
1-9                          サスペンドしているプログラムを前面に持ってくる
!                            ファイルマネージャーを起動する。
?                            ヘルプを表示する


シェルスクリプト言語 xyzshの使い方

    コマンドラインでhelpを実行してください。

キーコード
    $keycode::up 上キー
    $keycode::right 右キー
    $keycode::down 下キー
    $keycode::left 左キー
    $keycode::insert インサートキー
    $keycode::delete deleteキー
    $keycode::delete2 deleteキー2
    $keycode::home homeキー
    $keycode::end endキー
    $keycode::pageup pageupキー
    $keycode::pagedown pagedownキー
    $keycode::enter ENTERキー
    $keycode::backspace BackSpaceキー
    $keycode::f1, keycode::f12) ファンクションキー
    $keycode::a,..., keycode::z) 英字キーa,..z
    $keycode::A, ..., keycode::Z) 英字キーA,...,Z
    $keycode::space スペースキー
    $keycode::ctrl_a, keycode::ctrl_z) CTRL+英字キー
    $keycode::escape escapeキー
    $keycode::tab tabキー
    $keycode::0,...,keycode::9) 数字キー
    $keycode::exclam !キー
    $keycode::dquote "キー
    $keycode::sharp #キー
    $keycode::dollar $キー
    $keycode::percent %キー
    $keycode::and &amp;
    $keycode::squote 'キー
    $keycode::lparen (キー
    $keycode::rparen )キー
    $keycode::tilda ~キー
    $keycode::equal =キー
    $keycode::minus -キー
    $keycode::cup ^キー
    $keycode::vbar |キー
    $keycode::backslash \キー
    $keycode::atmark @キー
    $keycode::bapostrophe `キー
    $keycode::lcurly {キー
    $keycode::lbrack [キー
    $keycode::plus +キー
    $keycode::semicolon ;キー
    $keycode::star *キー
    $keycode::colon :キー
    $keycode::rcurly }キー
    $keycode::rbrack ]キー
    $keycode::lss &lt;キー
    $keycode::comma ,キー
    $keycode::gtr &gt;キー
    $keycode::dot .キー
    $keycode::slash /キー
    $keycode::qmark ?キー
    $keycode::underbar _キー
